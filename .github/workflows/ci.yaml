name: 'CICD'

on:
  push:
    branches:
      - main

jobs:
  deploy-int:
    name: 'Deploy Int'
    runs-on: ubuntu-latest
    steps:
      - name: 'Git checkout'
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Set up node
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Install dependencies
        uses: bahmutov/npm-install@v1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Deploy
        run: npx sst deploy --stage int --outputs-file out.json

      - name: Upload logs to artifactory
        uses: actions/upload-artifact@v2
        with:
          name: deploy-output
          path: out.json
  run-tests-int:
    name: 'Run tests on integration'
    runs-on: ubuntu-latest
    needs: deploy-int
    steps:
      - name: 'Git checkout'
        uses: actions/checkout@v3
        with:
          ref: main

      - name: 'Run Percy&Cypress'
        uses: cypress-io/github-action@v5
        env:
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
        with:
          working-directory: tests
          command: npm run percy:int

      - name: Get Allure history
        uses: actions/checkout@v3
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Get Timestamp
        id: timestamp
        uses: nanzm/get-time-action@v1.1
        if: always()
        with:
          timeZone: 2
          format: 'YYYYMMDDHHmmss'

      - name: Generate allure Report
        uses: simple-elf/allure-report-action@master
        if: always()
        with:
          allure_results: tests/build/allure-results
          allure_history: allure-history
          keep_reports: 20
          github_run_num: ${{ steps.timestamp.outputs.time }}

      - name: Deploy report to Github Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v2
        env:
          PERSONAL_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PUBLISH_BRANCH: gh-pages
          PUBLISH_DIR: allure-history

  deploy-prod:
    name: 'Deploy production'
    runs-on: ubuntu-latest
    environment:
      name: prod
    needs: run-tests-int
    steps:
      - name: 'Git checkout'
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Set up node
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Install dependencies
        uses: bahmutov/npm-install@v1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Deploy
        run: npx sst deploy --stage prod --outputs-file out.json

      - name: Upload logs to artifactory
        uses: actions/upload-artifact@v2
        with:
          name: deploy-output
          path: out.json

  run-tests-prod:
    name: 'Run tests on prod'
    runs-on: ubuntu-latest
    needs: deploy-prod
    steps:
      - name: 'Git checkout'
        uses: actions/checkout@v3
        with:
          ref: main

      - name: 'Run Percy&Cypress'
        uses: cypress-io/github-action@v5
        env:
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
        with:
          working-directory: tests
          command: npm run percy:prod

      - name: Get Allure history
        uses: actions/checkout@v3
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Get Timestamp
        id: timestamp
        uses: nanzm/get-time-action@v1.1
        if: always()
        with:
          timeZone: 2
          format: 'YYYYMMDDHHmmss'

      - name: Generate allure Report
        uses: simple-elf/allure-report-action@master
        if: always()
        with:
          allure_results: tests/build/allure-results
          allure_history: allure-history
          keep_reports: 20
          github_run_num: ${{ steps.timestamp.outputs.time }}

      - name: Deploy report to Github Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v2
        env:
          PERSONAL_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PUBLISH_BRANCH: gh-pages
          PUBLISH_DIR: allure-history
